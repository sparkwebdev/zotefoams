{"version":3,"file":"critical.js","sources":["../src/utils/dom-utilities.js","../src/critical/navigation-keyboard.js","../src/critical/navigation.js"],"sourcesContent":["// =============================================================================\n// Zotefoams DOM Utilities - Core DOM manipulation utilities (ES Module)\n// =============================================================================\n\n/**\n * DOM Selection Utilities - Centralized element selection patterns\n */\nexport const ZotefoamsDOMUtils = {\n\t/**\n\t * Safe querySelector with optional fallback\n\t */\n\tselect(selector, fallback = null) {\n\t\tconst element = document.querySelector(selector);\n\t\treturn element || fallback;\n\t},\n\n\t/**\n\t * Safe querySelectorAll with guaranteed array return\n\t */\n\tselectAll(selector) {\n\t\treturn Array.from(document.querySelectorAll(selector));\n\t},\n\n\t/**\n\t * Select elements with data attribute\n\t */\n\tselectByData(attribute, value = null) {\n\t\tconst selector = value ? `[data-${attribute}=\"${value}\"]` : `[data-${attribute}]`;\n\t\treturn this.selectAll(selector);\n\t},\n\n\t/**\n\t * Safe closest selector with fallback\n\t */\n\tclosest(element, selector, fallback = null) {\n\t\treturn element?.closest(selector) || fallback;\n\t},\n\n\t/**\n\t * Check if element exists and is visible\n\t */\n\tisVisible(element) {\n\t\tif (!element) return false;\n\t\tconst rect = element.getBoundingClientRect();\n\t\treturn rect.width > 0 && rect.height > 0;\n\t}\n};\n\n/**\n * Event Handling Utilities - Centralized event management patterns\n */\nexport const ZotefoamsEventUtils = {\n\t/**\n\t * Add event listener with cleanup tracking\n\t */\n\ton(element, event, handler, options = {}) {\n\t\tif (!element) return null;\n\t\telement.addEventListener(event, handler, options);\n\t\treturn { element, event, handler };\n\t},\n\n\t/**\n\t * Add event listener to multiple elements\n\t */\n\tonAll(elements, event, handler, options = {}) {\n\t\treturn elements.map(element => this.on(element, event, handler, options)).filter(Boolean);\n\t},\n\n\t/**\n\t * Delegated event handling for dynamic content\n\t */\n\tdelegate(container, selector, event, handler) {\n\t\treturn this.on(container, event, (e) => {\n\t\t\tconst target = e.target.closest(selector);\n\t\t\tif (target && container.contains(target)) {\n\t\t\t\thandler.call(target, e);\n\t\t\t}\n\t\t});\n\t},\n\n\t/**\n\t * One-time event listener\n\t */\n\tonce(element, event, handler) {\n\t\treturn this.on(element, event, handler, { once: true });\n\t},\n\n\t/**\n\t * Debounced event handler\n\t */\n\tdebounce(func, wait) {\n\t\tlet timeout;\n\t\treturn function executedFunction(...args) {\n\t\t\tconst later = () => {\n\t\t\t\tclearTimeout(timeout);\n\t\t\t\tfunc(...args);\n\t\t\t};\n\t\t\tclearTimeout(timeout);\n\t\t\ttimeout = setTimeout(later, wait);\n\t\t};\n\t}\n};\n\n/**\n * CSS Class Utilities - Centralized class manipulation patterns\n */\nexport const ZotefoamsClassUtils = {\n\t/**\n\t * Toggle class on element safely\n\t */\n\ttoggle(element, className, force = undefined) {\n\t\tif (!element) return false;\n\t\treturn element.classList.toggle(className, force);\n\t},\n\n\t/**\n\t * Add class to element safely\n\t */\n\tadd(element, ...classNames) {\n\t\tif (!element) return;\n\t\telement.classList.add(...classNames);\n\t},\n\n\t/**\n\t * Remove class from element safely\n\t */\n\tremove(element, ...classNames) {\n\t\tif (!element) return;\n\t\telement.classList.remove(...classNames);\n\t},\n\n\t/**\n\t * Toggle class on multiple elements\n\t */\n\ttoggleAll(elements, className, force = undefined) {\n\t\treturn elements.map(element => this.toggle(element, className, force));\n\t},\n\n\t/**\n\t * Add class to multiple elements\n\t */\n\taddAll(elements, ...classNames) {\n\t\telements.forEach(element => this.add(element, ...classNames));\n\t},\n\n\t/**\n\t * Remove class from multiple elements\n\t */\n\tremoveAll(elements, ...classNames) {\n\t\telements.forEach(element => this.remove(element, ...classNames));\n\t},\n\n\t/**\n\t * Replace class on element\n\t */\n\treplace(element, oldClass, newClass) {\n\t\tif (!element) return;\n\t\tthis.remove(element, oldClass);\n\t\tthis.add(element, newClass);\n\t}\n};\n\n/**\n * Animation Utilities - Centralized animation patterns\n */\nexport const ZotefoamsAnimationUtils = {\n\t/**\n\t * Fade in element with class toggle\n\t */\n\tfadeIn(element, className = 'fade-in') {\n\t\tif (!element) return;\n\t\tZotefoamsClassUtils.add(element, className);\n\t},\n\n\t/**\n\t * Fade out element with class toggle\n\t */\n\tfadeOut(element, className = 'fade-in') {\n\t\tif (!element) return;\n\t\tZotefoamsClassUtils.remove(element, className);\n\t},\n\n\t/**\n\t * Show/hide element with smooth transition\n\t */\n\ttoggleVisibility(element, show) {\n\t\tif (!element) return;\n\t\t\n\t\tif (show) {\n\t\t\telement.style.display = 'block';\n\t\t\telement.style.opacity = '1';\n\t\t\telement.style.maxHeight = '1000px';\n\t\t} else {\n\t\t\telement.style.display = 'none';\n\t\t\telement.style.opacity = '0';\n\t\t\telement.style.maxHeight = '0';\n\t\t}\n\t},\n\n\t/**\n\t * Smooth scroll to element\n\t */\n\tscrollTo(element, offset = -80, behavior = 'smooth') {\n\t\tif (!element) return;\n\t\tconst targetPosition = element.getBoundingClientRect().top + window.pageYOffset + offset;\n\t\twindow.scrollTo({\n\t\t\ttop: targetPosition,\n\t\t\tbehavior: behavior\n\t\t});\n\t}\n};\n\n/**\n * Touch/Device Detection Utilities\n */\nexport const ZotefoamsDeviceUtils = {\n\t/**\n\t * Detect touch device\n\t */\n\tisTouchDevice() {\n\t\treturn 'ontouchstart' in window || navigator.maxTouchPoints > 0 || navigator.msMaxTouchPoints > 0;\n\t},\n\n\t/**\n\t * Get interaction event based on device\n\t */\n\tgetInteractionEvent() {\n\t\treturn this.isTouchDevice() ? 'click' : 'hover';\n\t},\n\n\t/**\n\t * Apply touch-specific classes\n\t */\n\tinitTouchSupport() {\n\t\tif (this.isTouchDevice()) {\n\t\t\tZotefoamsClassUtils.add(document.body, 'touch-device');\n\t\t} else {\n\t\t\tZotefoamsClassUtils.add(document.body, 'no-touch-device');\n\t\t}\n\t}\n};\n\n/**\n * Form Utilities - Centralized form handling patterns\n */\nexport const ZotefoamsFormUtils = {\n\t/**\n\t * Get form data as object\n\t */\n\tgetFormData(form) {\n\t\tif (!form) return {};\n\t\tconst formData = new FormData(form);\n\t\treturn Object.fromEntries(formData.entries());\n\t},\n\n\t/**\n\t * Validate required fields\n\t */\n\tvalidateRequired(form) {\n\t\tif (!form) return false;\n\t\tconst requiredFields = ZotefoamsDOMUtils.selectAll('input[required], textarea[required], select[required]');\n\t\treturn requiredFields.every(field => field.value.trim() !== '');\n\t},\n\n\t/**\n\t * Focus first invalid field\n\t */\n\tfocusFirstInvalid(form) {\n\t\tif (!form) return;\n\t\tconst invalid = form.querySelector(':invalid');\n\t\tif (invalid) invalid.focus();\n\t}\n};\n\n/**\n * URL/Navigation Utilities\n */\nexport const ZotefoamsURLUtils = {\n\t/**\n\t * Get URL parameter\n\t */\n\tgetParam(name) {\n\t\tconst params = new URLSearchParams(window.location.search);\n\t\treturn params.get(name);\n\t},\n\n\t/**\n\t * Set URL parameter without reload\n\t */\n\tsetParam(name, value) {\n\t\tconst params = new URLSearchParams(window.location.search);\n\t\tparams.set(name, value);\n\t\tconst newURL = window.location.pathname + '?' + params.toString();\n\t\twindow.history.replaceState({}, '', newURL);\n\t},\n\n\t/**\n\t * Get hash without #\n\t */\n\tgetHash() {\n\t\treturn window.location.hash.substring(1);\n\t},\n\n\t/**\n\t * Set hash without reload\n\t */\n\tsetHash(hash) {\n\t\twindow.history.replaceState(null, '', '#' + hash);\n\t}\n};\n\n/**\n * Accessibility Utilities - Keyboard navigation and ARIA support\n */\nexport const ZotefoamsAccessibilityUtils = {\n\t/**\n\t * Get all focusable elements within a container\n\t * @param {HTMLElement} container - Container element to search within\n\t * @returns {Array<HTMLElement>} Array of focusable elements\n\t */\n\tgetFocusableElements(container) {\n\t\tif (!container) return [];\n\t\treturn Array.from(\n\t\t\tcontainer.querySelectorAll(\n\t\t\t\t'a, button, input, textarea, select, [tabindex]:not([tabindex=\"-1\"])'\n\t\t\t)\n\t\t);\n\t},\n\n\t/**\n\t * Set aria-expanded attribute\n\t * @param {HTMLElement} element - Element to update\n\t * @param {boolean} expanded - Expanded state\n\t */\n\tsetAriaExpanded(element, expanded) {\n\t\tif (element) {\n\t\t\telement.setAttribute(\"aria-expanded\", expanded.toString());\n\t\t}\n\t},\n\n\t/**\n\t * Set multiple ARIA attributes at once\n\t * @param {HTMLElement} element - Element to update\n\t * @param {Object} attributes - Object with ARIA attribute names and values\n\t */\n\tsetAriaAttributes(element, attributes) {\n\t\tif (!element) return;\n\t\tObject.entries(attributes).forEach(([key, value]) => {\n\t\t\telement.setAttribute(key, value.toString());\n\t\t});\n\t},\n\n\t/**\n\t * Toggle aria-hidden state\n\t * @param {HTMLElement} element - Element to update\n\t * @param {boolean} hidden - Hidden state\n\t */\n\tsetAriaHidden(element, hidden) {\n\t\tif (element) {\n\t\t\telement.setAttribute(\"aria-hidden\", hidden.toString());\n\t\t}\n\t},\n\n\t/**\n\t * Focus element with optional trap\n\t * @param {HTMLElement} element - Element to focus\n\t * @param {boolean} setTabindex - Whether to set tabindex=\"-1\" for non-focusable elements\n\t */\n\tfocus(element, setTabindex = false) {\n\t\tif (!element) return;\n\t\tif (setTabindex && !element.hasAttribute('tabindex')) {\n\t\t\telement.setAttribute('tabindex', '-1');\n\t\t}\n\t\telement.focus();\n\t}\n};\n\n/**\n * Ready State Utilities - Centralized DOMContentLoaded patterns\n */\nexport const ZotefoamsReadyUtils = {\n\t/**\n\t * Execute function when DOM is ready\n\t */\n\tready(callback) {\n\t\tif (document.readyState === 'loading') {\n\t\t\tdocument.addEventListener('DOMContentLoaded', callback);\n\t\t} else {\n\t\t\tcallback();\n\t\t}\n\t},\n\n\t/**\n\t * Execute multiple functions when DOM is ready\n\t */\n\treadyAll(callbacks) {\n\t\tthis.ready(() => {\n\t\t\tcallbacks.forEach(callback => {\n\t\t\t\ttry {\n\t\t\t\t\tcallback();\n\t\t\t\t} catch (error) {\n\t\t\t\t\tconsole.error('Ready callback error:', error);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n};","/**\n * Navigation Keyboard Handlers - Accessibility support for keyboard navigation\n * @version 1.3 - Removed updateMegaContainer (container deleted)\n */\n\nimport { ZotefoamsAccessibilityUtils } from '../utils/dom-utilities.js';\n\n// Re-export utilities for convenience\nexport const { getFocusableElements, setAriaExpanded } = ZotefoamsAccessibilityUtils;\n\n/**\n * Handle keyboard navigation within mega menus (Tab, Escape)\n * @param {KeyboardEvent} e - Keyboard event\n * @param {HTMLElement} megaMenu - Mega menu element\n * @param {HTMLElement} triggerLink - Link that triggers the menu\n */\nexport const handleMegaMenuKeyboard = (e, megaMenu, triggerLink) => {\n    if (e.key === \"Escape\") {\n        e.preventDefault();\n        megaMenu.setAttribute('aria-hidden', 'true');\n        setAriaExpanded(triggerLink, false);\n        triggerLink.focus();\n        return;\n    }\n\n    if (e.key === \"Tab\") {\n        const focusable = getFocusableElements(megaMenu);\n        const currentIndex = focusable.indexOf(document.activeElement);\n        const isFirst = currentIndex === 0;\n        const isLast = currentIndex === focusable.length - 1;\n\n        // Tab out of menu when reaching boundaries\n        if ((e.shiftKey && isFirst) || (!e.shiftKey && isLast)) {\n            e.preventDefault();\n            megaMenu.setAttribute('aria-hidden', 'true');\n            setAriaExpanded(triggerLink, false);\n\n            // Focus next/previous top-level link\n            const topLinks = Array.from(document.querySelectorAll(\"[data-js-nav='menu'] > li > a\"));\n            const index = topLinks.indexOf(triggerLink);\n            const targetLink = e.shiftKey\n                ? (index > 0 ? topLinks[index - 1] : triggerLink)\n                : (index < topLinks.length - 1 ? topLinks[index + 1] : triggerLink);\n            targetLink.focus();\n        }\n    }\n};\n\n/**\n * Handle keyboard activation for menu items (Enter, Space, ArrowDown)\n * @param {KeyboardEvent} e - Keyboard event\n * @param {HTMLElement} link - Menu item link\n * @param {HTMLElement} megaMenu - Mega menu element\n * @param {Function} closeAll - Callback to close all menus\n */\nexport const handleMenuItemKeyboard = (e, link, megaMenu, closeAll) => {\n    if (e.key === \"Enter\" || e.key === \" \" || e.key === \"ArrowDown\") {\n        e.preventDefault();\n\n        const isOpen = megaMenu.getAttribute('aria-hidden') === 'false';\n\n        if (isOpen) {\n            // Close if already open\n            if (e.key === \"ArrowDown\") {\n                // Move focus into menu\n                const firstFocusable = getFocusableElements(megaMenu)[0];\n                if (firstFocusable) firstFocusable.focus();\n                return;\n            }\n            megaMenu.setAttribute('aria-hidden', 'true');\n            setAriaExpanded(link, false);\n        } else {\n            // Open menu\n            closeAll();\n            megaMenu.setAttribute('aria-hidden', 'false');\n            setAriaExpanded(link, true);\n\n            // Focus heading for screen readers\n            const heading = megaMenu.querySelector(\".mega-menu-intro > h2\");\n            if (heading) {\n                heading.setAttribute(\"tabindex\", \"-1\");\n                setTimeout(() => heading.focus(), 200);\n            }\n        }\n    } else if (e.key === \"Escape\") {\n        closeAll();\n        link.focus();\n    }\n};\n","/**\n * Navigation.js - Simplified navigation with accessibility support\n * @version 0.13 - Mobile nav closes on Tab from last item\n */\n\nimport {\n    setAriaExpanded,\n    handleMegaMenuKeyboard,\n    handleMenuItemKeyboard,\n    getFocusableElements\n} from './navigation-keyboard.js';\n\nimport { ZotefoamsDeviceUtils } from '../utils/dom-utilities.js';\n\n(() => {\n    try {\n        // CRITICAL: Initialize touch detection FIRST, before any navigation logic\n        // This must run before initNavigation() checks for touch-device class\n        if (document.body) {\n            ZotefoamsDeviceUtils.initTouchSupport();\n        }\n\n        console.log('[Navigation v1.0.0b] Script loaded');\n\n        function initNavigation() {\n            const siteNav = document.querySelector(\"[data-js-nav='main']\");\n            if (!siteNav || siteNav.hasAttribute('data-critical-nav-initialized')) {\n                return false;\n            }\n\n            const button = document.querySelector(\"[data-js-nav='toggle']\");\n            const menu = document.querySelector(\"[data-js-nav='menu']\");\n            const utilityMenu = document.querySelector(\"[data-js-nav='utility']\");\n\n            if (!button || !menu) {\n                if (!menu && button) button.style.display = \"none\";\n                return false;\n            }\n\n            // Check if touch-device class exists (added by dom-utilities.js)\n            const isTouchDevice = document.body.classList.contains(\"touch-device\");\n            const megaNavMode = isTouchDevice ? \"click\" : \"hover\";\n            const HOVER_DELAY_MS = 200;\n\n            // Prevent accidental hover activation on page load (when mouse is already over nav)\n            let allowHover = false;\n            window.addEventListener(\"mousemove\", () => { allowHover = true; }, { once: true });\n\n            // Single timer for hide delays\n            let hideTimer = null;\n\n            // =========================================================================\n            // UTILITY FUNCTIONS\n            // =========================================================================\n            /**\n             * Close all mega menus\n             */\n            const closeMegaMenus = () => {\n                if (hideTimer) {\n                    clearTimeout(hideTimer);\n                    hideTimer = null;\n                }\n\n                document.querySelectorAll(\".mega-menu[aria-hidden='false']\")\n                    .forEach(menu => {\n                        menu.setAttribute('aria-hidden', 'true');\n\n                        const menuId = menu.getAttribute('id');\n                        const triggerLink = document.querySelector(`[aria-controls=\"${menuId}\"]`);\n                        if (triggerLink) {\n                            setAriaExpanded(triggerLink, false);\n                        }\n                    });\n            };\n\n            /**\n             * Close all utility menu dropdowns\n             */\n            const closeUtilityMenus = () => {\n                document.querySelectorAll(\"[data-js-nav='utility'] a[aria-expanded='true']\")\n                    .forEach(link => {\n                        setAriaExpanded(link, false);\n                        const submenuId = link.getAttribute('aria-controls');\n                        const submenu = document.getElementById(submenuId);\n                        if (submenu) {\n                            submenu.setAttribute('aria-hidden', 'true');\n                        }\n                    });\n            };\n\n            /**\n             * Close all menus\n             */\n            const closeAll = () => {\n                if (hideTimer) {\n                    clearTimeout(hideTimer);\n                    hideTimer = null;\n                }\n                closeMegaMenus();\n                closeUtilityMenus();\n            };\n\n            // =========================================================================\n            // HAMBURGER MENU TOGGLE\n            // =========================================================================\n            button.addEventListener(\"click\", () => {\n                const isExpanded = siteNav.classList.toggle(\"toggled\");\n                setAriaExpanded(button, isExpanded);\n                document.body.classList.toggle(\"no-scroll\", isExpanded);\n            });\n\n            // Mobile nav keyboard handling - close on Tab from last item\n            siteNav.addEventListener(\"keydown\", (e) => {\n                if (e.key === \"Tab\" && !e.shiftKey) {\n                    // Only when nav is open\n                    if (siteNav.classList.contains(\"toggled\")) {\n                        const focusable = getFocusableElements(siteNav);\n                        const lastFocusable = focusable[focusable.length - 1];\n\n                        // If we're on the last focusable element\n                        if (document.activeElement === lastFocusable) {\n                            e.preventDefault();\n\n                            // Close nav\n                            siteNav.classList.remove(\"toggled\");\n                            setAriaExpanded(button, false);\n                            document.body.classList.remove(\"no-scroll\");\n\n                            // Focus hamburger button after DOM updates\n                            setTimeout(() => button.focus(), 0);\n                        }\n                    }\n                }\n            });\n\n            // =========================================================================\n            // DROPDOWN TOGGLE BUTTONS (Mobile sub-menus)\n            // =========================================================================\n            const setupDropdownToggles = (container) => {\n                container.querySelectorAll(\".dropdown-toggle\").forEach((toggle, index) => {\n                    const submenu = toggle.parentNode.querySelector(':scope > ul');\n\n                    if (submenu) {\n                        const submenuId = `mobile-submenu-${index}`;\n                        submenu.setAttribute('id', submenuId);\n                        toggle.setAttribute('aria-controls', submenuId);\n                        toggle.setAttribute('aria-expanded', 'false');\n\n                        toggle.addEventListener(\"click\", (e) => {\n                            e.stopPropagation();\n                            e.preventDefault();\n\n                            const isExpanded = toggle.getAttribute('aria-expanded') === 'true';\n                            setAriaExpanded(toggle, !isExpanded);\n                        });\n                    }\n                });\n            };\n\n            // =========================================================================\n            // MEGA MENU SETUP\n            // =========================================================================\n            const setupMegaMenu = (link) => {\n                const controlId = link.getAttribute(\"aria-controls\");\n                const megaMenu = document.getElementById(controlId);\n\n                if (!megaMenu || link.hasAttribute('data-mega-nav-initialized')) {\n                    return;\n                }\n                link.setAttribute('data-mega-nav-initialized', 'true');\n\n                megaMenu.setAttribute('aria-hidden', 'true');\n\n                const menuItem = link.parentNode;\n\n                if (megaNavMode === \"hover\") {\n                    // DESKTOP: Hover mode\n                    let localHideTimer = null;\n\n                    const showMenu = () => {\n                        // Cancel this menu's hide timer\n                        if (localHideTimer) {\n                            clearTimeout(localHideTimer);\n                            localHideTimer = null;\n                        }\n\n                        // Close any other open mega menus\n                        closeMegaMenus();\n                        closeUtilityMenus();\n\n                        megaMenu.setAttribute('aria-hidden', 'false');\n                        setAriaExpanded(link, true);\n                    };\n\n                    const hideMenu = () => {\n                        // Delay hiding just this menu\n                        localHideTimer = setTimeout(() => {\n                            megaMenu.setAttribute('aria-hidden', 'true');\n                            setAriaExpanded(link, false);\n                            localHideTimer = null;\n                        }, HOVER_DELAY_MS);\n                    };\n\n                    const cancelHide = () => {\n                        if (localHideTimer) {\n                            clearTimeout(localHideTimer);\n                            localHideTimer = null;\n                        }\n                    };\n\n                    // Event wiring\n                    menuItem.addEventListener(\"mouseenter\", showMenu);\n                    menuItem.addEventListener(\"mouseleave\", hideMenu);\n                    megaMenu.addEventListener(\"mouseenter\", cancelHide);\n                    megaMenu.addEventListener(\"mouseleave\", hideMenu);\n                } else {\n                    // TOUCH: Click mode - toggle mega menu open/closed (desktop only)\n                    link.addEventListener(\"click\", (e) => {\n                        // Only prevent default if mega menu is visible (not hidden on mobile)\n                        if (megaMenu.offsetParent !== null) {\n                            e.preventDefault();\n                            const isOpen = megaMenu.getAttribute('aria-hidden') === 'false';\n\n                            if (isOpen) {\n                                megaMenu.setAttribute('aria-hidden', 'true');\n                                setAriaExpanded(link, false);\n                            } else {\n                                closeAll();\n                                megaMenu.setAttribute('aria-hidden', 'false');\n                                setAriaExpanded(link, true);\n                            }\n                        }\n                        // On mobile (megaMenu.offsetParent === null), link works as normal navigation\n                    });\n                }\n\n                // Keyboard support (works for both hover and touch modes)\n                link.addEventListener(\"keydown\", (e) => {\n                    handleMenuItemKeyboard(e, link, megaMenu, closeAll);\n                });\n\n                megaMenu.addEventListener(\"keydown\", (e) => {\n                    handleMegaMenuKeyboard(e, megaMenu, link);\n                });\n            };\n\n            // =========================================================================\n            // UTILITY MENU\n            // =========================================================================\n            const setupUtilityMenu = () => {\n                if (!utilityMenu) return;\n\n                const topLevelItems = utilityMenu.querySelectorAll(':scope > ul > li');\n\n                topLevelItems.forEach((menuItem, index) => {\n                    const link = menuItem.querySelector(':scope > a');\n                    const submenu = menuItem.querySelector(':scope > ul');\n\n                    if (link && submenu) {\n                        const submenuId = `utility-submenu-${index}`;\n                        submenu.setAttribute('id', submenuId);\n                        submenu.setAttribute('aria-hidden', 'true');\n                        link.setAttribute('aria-controls', submenuId);\n                        link.setAttribute('aria-expanded', 'false');\n\n                        if (megaNavMode === \"hover\") {\n                            const showSubmenu = () => {\n                                closeUtilityMenus();\n                                setAriaExpanded(link, true);\n                                submenu.setAttribute('aria-hidden', 'false');\n                            };\n\n                            const hideSubmenu = () => {\n                                setAriaExpanded(link, false);\n                                submenu.setAttribute('aria-hidden', 'true');\n                            };\n\n                            menuItem.addEventListener(\"mouseenter\", showSubmenu);\n                            menuItem.addEventListener(\"mouseleave\", hideSubmenu);\n\n                        } else {\n                            link.addEventListener(\"click\", (e) => {\n                                e.preventDefault();\n                                e.stopPropagation();\n\n                                const isOpen = link.getAttribute('aria-expanded') === 'true';\n\n                                if (isOpen) {\n                                    // Close this menu\n                                    setAriaExpanded(link, false);\n                                    submenu.setAttribute('aria-hidden', 'true');\n                                } else {\n                                    // Close all utility menus, then open this one\n                                    closeUtilityMenus();\n                                    setAriaExpanded(link, true);\n                                    submenu.setAttribute('aria-hidden', 'false');\n                                }\n                            });\n                        }\n\n                        // Keyboard support (works for both hover and touch modes)\n                        link.addEventListener(\"keydown\", (e) => {\n                            handleMenuItemKeyboard(e, link, submenu, closeUtilityMenus);\n                        });\n\n                        submenu.addEventListener(\"keydown\", (e) => {\n                            handleMegaMenuKeyboard(e, submenu, link);\n                        });\n                    }\n                });\n            };\n\n            // =========================================================================\n            // INITIALIZE ALL MENUS\n            // =========================================================================\n\n            // Setup mega menus (only within main navigation)\n            menu.querySelectorAll(\"[aria-controls]\").forEach(setupMegaMenu);\n\n            // Setup dropdown toggles for mobile navigation\n            setupDropdownToggles(siteNav);\n\n            // Setup utility menu (hover for desktop, click for touch)\n            setupUtilityMenu();\n\n            // =========================================================================\n            // DESKTOP SAFETY: Ensure hover menus close properly when leaving navigation\n            // =========================================================================\n            // if (megaNavMode === \"hover\") {\n            //     // When the mouse leaves the entire navigation area\n            //     siteNav.addEventListener(\"mouseleave\", () => {\n            //         closeAll();\n            //     });\n\n            //     // Also close if user switches tabs or windows mid-hover\n            //     window.addEventListener(\"blur\", closeAll);\n            // }\n\n\n            // Make menu labels clickable\n            // if (isTouchDevice) {\n                document.querySelectorAll('.menu-label').forEach(label => {\n                    const dropdownToggle = label.nextElementSibling;\n                    if (dropdownToggle && dropdownToggle.classList.contains('dropdown-toggle')) {\n                        label.addEventListener('click', (e) => {\n                            e.preventDefault();\n                            e.stopPropagation();\n                            dropdownToggle.click();\n                        });\n                    }\n                });\n            // }\n\n            // =========================================================================\n            // GLOBAL CLICK OUTSIDE TO CLOSE\n            // =========================================================================\n\n            document.addEventListener(\"click\", (e) => {\n                const clickedInsideNav = siteNav.contains(e.target);\n                const clickedInsideUtility = utilityMenu && utilityMenu.contains(e.target);\n\n                if (!clickedInsideNav && !clickedInsideUtility) {\n                    closeAll();\n                    siteNav.classList.remove(\"toggled\");\n                    setAriaExpanded(button, false);\n                    document.body.classList.remove(\"no-scroll\");\n                }\n            });\n\n            // Mark as initialized\n            siteNav.setAttribute('data-critical-nav-initialized', 'true');\n            return true;\n        }\n\n        // Try to initialize immediately (script inlined in footer, after navigation HTML)\n        // If navigation doesn't exist yet, wait for DOMContentLoaded as fallback\n        const hasNav = document.querySelector(\"[data-js-nav='main']\");\n\n        if (hasNav) {\n            // Navigation exists, initialize immediately (before images load)\n            initNavigation();\n        } else if (document.readyState === 'loading') {\n            // Fallback: wait for DOMContentLoaded\n            document.addEventListener('DOMContentLoaded', initNavigation);\n        } else {\n            // DOM ready but nav missing, try init anyway\n            initNavigation();\n        }\n\n    } catch (error) {\n        console.error('[Navigation] Error:', error);\n    }\n})();\n"],"names":["ZotefoamsClassUtils","toggle","element","className","force","undefined","classList","add","classNames","remove","toggleAll","elements","map","addAll","forEach","removeAll","replace","oldClass","newClass","ZotefoamsDeviceUtils","isTouchDevice","window","navigator","maxTouchPoints","msMaxTouchPoints","getInteractionEvent","initTouchSupport","document","body","ZotefoamsAccessibilityUtils","getFocusableElements","container","Array","from","querySelectorAll","setAriaExpanded","expanded","setAttribute","toString","handleMegaMenuKeyboard","e","megaMenu","triggerLink","key","preventDefault","focus","focusable","currentIndex","indexOf","activeElement","isFirst","isLast","length","shiftKey","topLinks","index","targetLink","handleMenuItemKeyboard","link","closeAll","isOpen","getAttribute","firstFocusable","heading","querySelector","setTimeout","console","log","initNavigation","siteNav","hasAttribute","button","menu","utilityMenu","style","display","contains","megaNavMode","HOVER_DELAY_MS","allowHover","addEventListener","once","hideTimer","closeMegaMenus","clearTimeout","menuId","closeUtilityMenus","submenuId","submenu","getElementById","isExpanded","lastFocusable","setupDropdownToggles","parentNode","stopPropagation","setupMegaMenu","controlId","menuItem","localHideTimer","showMenu","hideMenu","cancelHide","offsetParent","setupUtilityMenu","topLevelItems","showSubmenu","hideSubmenu","label","dropdownToggle","nextElementSibling","click","clickedInsideNav","target","clickedInsideUtility","hasNav","readyState","error"],"mappings":"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"}